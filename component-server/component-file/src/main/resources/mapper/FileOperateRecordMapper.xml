<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kanghe.component.file.mapper.FileOperateRecordMapper">
    <resultMap id="BaseResultMap" type="com.kanghe.component.file.entity.FileOperateRecord">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="file_name" jdbcType="VARCHAR" property="fileName"/>
        <result column="file_type" jdbcType="BIT" property="fileType"/>
        <result column="file_size" jdbcType="INTEGER" property="fileSize"/>
        <result column="file_url" jdbcType="VARCHAR" property="fileUrl"/>
        <result column="file_origin" jdbcType="CHAR" property="fileOrigin"/>
        <result column="operator" jdbcType="VARCHAR" property="operator"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, code, file_name, file_type, file_size, file_url, file_origin, `operator`, create_time, 
    update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file_operate_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_file_operate_record
    where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.kanghe.component.file.entity.FileOperateRecord" useGeneratedKeys="true">
    insert into t_file_operate_record (code, file_name, file_type, 
      file_size, file_url, file_origin, 
      `operator`, create_time, update_time
      )
    values (#{code,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{fileType,jdbcType=BIT}, 
      #{fileSize,jdbcType=INTEGER}, #{fileUrl,jdbcType=VARCHAR}, #{fileOrigin,jdbcType=CHAR}, 
      #{operator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.kanghe.component.file.entity.FileOperateRecord" useGeneratedKeys="true">
        insert into t_file_operate_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">
                code,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="fileType != null">
                file_type,
            </if>
            <if test="fileSize != null">
                file_size,
            </if>
            <if test="fileUrl != null">
                file_url,
            </if>
            <if test="fileOrigin != null">
                file_origin,
            </if>
            <if test="operator != null">
                `operator`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                #{fileType,jdbcType=BIT},
            </if>
            <if test="fileSize != null">
                #{fileSize,jdbcType=INTEGER},
            </if>
            <if test="fileUrl != null">
                #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileOrigin != null">
                #{fileOrigin,jdbcType=CHAR},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.kanghe.component.file.entity.FileOperateRecord">
        update t_file_operate_record
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=BIT},
            </if>
            <if test="fileSize != null">
                file_size = #{fileSize,jdbcType=INTEGER},
            </if>
            <if test="fileUrl != null">
                file_url = #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileOrigin != null">
                file_origin = #{fileOrigin,jdbcType=CHAR},
            </if>
            <if test="operator != null">
                `operator` = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kanghe.component.file.entity.FileOperateRecord">
    update t_file_operate_record
    set code = #{code,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=BIT},
      file_size = #{fileSize,jdbcType=INTEGER},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      file_origin = #{fileOrigin,jdbcType=CHAR},
      `operator` = #{operator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>